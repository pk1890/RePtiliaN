
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftORNORleftANDNANDNAME INTEGER DOUBLE FUNCTION RELOP BINOP STRING BOOLEAN IF WHILE FOR DEF RUN AND OR NOR NANDblock : '{' program '}'\n             | statement \n       program : statement ';' program\n               | statement ';'statement : exprstatement : booleanstatement : DEF NAME '=' blockstatement : RUN NAMEstatement : IF '(' boolean ')' block statement : WHILE '(' boolean ')' block statement : FOR '(' statement ';' boolean ';' statement ')' block boolean : relation\n               | BOOLEAN\n               | boolean logicop booleanlogicop : AND \n               | OR\n               | NAND\n               | NORrelation : expr RELOP exprstatement : NAME '=' exprexpr : name\n            | number\n            | name expr\n            | number expr\n            | sinop expr\n            | binop expr\n            | sinop \n            | binop sinop : FUNCTIONbinop : BINOPname : NAMEnumber : INTEGER\n            | DOUBLE"
    
_lr_action_items = {'{':([0,46,53,54,61,],[2,2,2,2,2,]),'DEF':([0,2,35,42,46,53,54,59,61,],[6,6,6,6,6,6,6,6,6,]),'RUN':([0,2,35,42,46,53,54,59,61,],[8,8,8,8,8,8,8,8,8,]),'IF':([0,2,35,42,46,53,54,59,61,],[9,9,9,9,9,9,9,9,9,]),'WHILE':([0,2,35,42,46,53,54,59,61,],[10,10,10,10,10,10,10,10,10,]),'FOR':([0,2,35,42,46,53,54,59,61,],[11,11,11,11,11,11,11,11,11,]),'NAME':([0,2,6,7,8,12,13,14,15,18,19,20,21,24,25,26,27,28,29,31,33,34,35,37,42,46,53,54,55,59,61,],[7,7,30,-31,32,37,37,37,37,-32,-33,-29,-30,37,37,-15,-16,-17,-18,37,37,37,7,-31,7,7,7,7,37,7,7,]),'BOOLEAN':([0,2,25,26,27,28,29,33,34,35,42,46,53,54,55,59,61,],[17,17,17,-15,-16,-17,-18,17,17,17,17,17,17,17,17,17,17,]),'INTEGER':([0,2,7,12,13,14,15,18,19,20,21,24,25,26,27,28,29,31,33,34,35,37,42,46,53,54,55,59,61,],[18,18,-31,18,18,18,18,-32,-33,-29,-30,18,18,-15,-16,-17,-18,18,18,18,18,-31,18,18,18,18,18,18,18,]),'DOUBLE':([0,2,7,12,13,14,15,18,19,20,21,24,25,26,27,28,29,31,33,34,35,37,42,46,53,54,55,59,61,],[19,19,-31,19,19,19,19,-32,-33,-29,-30,19,19,-15,-16,-17,-18,19,19,19,19,-31,19,19,19,19,19,19,19,]),'FUNCTION':([0,2,7,12,13,14,15,18,19,20,21,24,25,26,27,28,29,31,33,34,35,37,42,46,53,54,55,59,61,],[20,20,-31,20,20,20,20,-32,-33,-29,-30,20,20,-15,-16,-17,-18,20,20,20,20,-31,20,20,20,20,20,20,20,]),'BINOP':([0,2,7,12,13,14,15,18,19,20,21,24,25,26,27,28,29,31,33,34,35,37,42,46,53,54,55,59,61,],[21,21,-31,21,21,21,21,-32,-33,-29,-30,21,21,-15,-16,-17,-18,21,21,21,21,-31,21,21,21,21,21,21,21,]),'$end':([1,3,4,5,7,12,13,14,15,16,17,18,19,20,21,32,36,37,38,39,40,41,43,44,47,52,56,57,62,],[0,-2,-5,-6,-31,-21,-22,-27,-28,-12,-13,-32,-33,-29,-30,-8,-23,-31,-24,-25,-26,-1,-19,-14,-20,-7,-9,-10,-11,]),';':([3,4,5,7,12,13,14,15,16,17,18,19,20,21,23,32,36,37,38,39,40,41,43,44,47,50,52,56,57,58,62,],[-2,-5,-6,-31,-21,-22,-27,-28,-12,-13,-32,-33,-29,-30,42,-8,-23,-31,-24,-25,-26,-1,-19,-14,-20,55,-7,-9,-10,59,-11,]),')':([3,4,5,7,12,13,14,15,16,17,18,19,20,21,32,36,37,38,39,40,41,43,44,47,48,49,52,56,57,60,62,],[-2,-5,-6,-31,-21,-22,-27,-28,-12,-13,-32,-33,-29,-30,-8,-23,-31,-24,-25,-26,-1,-19,-14,-20,53,54,-7,-9,-10,61,-11,]),'RELOP':([4,7,12,13,14,15,18,19,20,21,36,37,38,39,40,45,],[24,-31,-21,-22,-27,-28,-32,-33,-29,-30,-23,-31,-24,-25,-26,24,]),'AND':([5,12,13,14,15,16,17,18,19,20,21,36,37,38,39,40,43,44,48,49,58,],[26,-21,-22,-27,-28,-12,-13,-32,-33,-29,-30,-23,-31,-24,-25,-26,-19,26,26,26,26,]),'OR':([5,12,13,14,15,16,17,18,19,20,21,36,37,38,39,40,43,44,48,49,58,],[27,-21,-22,-27,-28,-12,-13,-32,-33,-29,-30,-23,-31,-24,-25,-26,-19,27,27,27,27,]),'NAND':([5,12,13,14,15,16,17,18,19,20,21,36,37,38,39,40,43,44,48,49,58,],[28,-21,-22,-27,-28,-12,-13,-32,-33,-29,-30,-23,-31,-24,-25,-26,-19,28,28,28,28,]),'NOR':([5,12,13,14,15,16,17,18,19,20,21,36,37,38,39,40,43,44,48,49,58,],[29,-21,-22,-27,-28,-12,-13,-32,-33,-29,-30,-23,-31,-24,-25,-26,-19,29,29,29,29,]),'=':([7,30,],[31,46,]),'(':([9,10,11,],[33,34,35,]),'}':([22,42,51,],[41,-4,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'block':([0,46,53,54,61,],[1,52,56,57,62,]),'statement':([0,2,35,42,46,53,54,59,61,],[3,23,50,23,3,3,3,60,3,]),'expr':([0,2,12,13,14,15,24,25,31,33,34,35,42,46,53,54,55,59,61,],[4,4,36,38,39,40,43,45,47,45,45,4,4,4,4,4,45,4,4,]),'boolean':([0,2,25,33,34,35,42,46,53,54,55,59,61,],[5,5,44,48,49,5,5,5,5,5,58,5,5,]),'name':([0,2,12,13,14,15,24,25,31,33,34,35,42,46,53,54,55,59,61,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'number':([0,2,12,13,14,15,24,25,31,33,34,35,42,46,53,54,55,59,61,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'sinop':([0,2,12,13,14,15,24,25,31,33,34,35,42,46,53,54,55,59,61,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'binop':([0,2,12,13,14,15,24,25,31,33,34,35,42,46,53,54,55,59,61,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'relation':([0,2,25,33,34,35,42,46,53,54,55,59,61,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'program':([2,42,],[22,51,]),'logicop':([5,44,48,49,58,],[25,25,25,25,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> block","S'",1,None,None,None),
  ('block -> { program }','block',3,'p_block','rpn_calc.py',105),
  ('block -> statement','block',1,'p_block','rpn_calc.py',106),
  ('program -> statement ; program','program',3,'p_block','rpn_calc.py',107),
  ('program -> statement ;','program',2,'p_block','rpn_calc.py',108),
  ('statement -> expr','statement',1,'p_statement_expr','rpn_calc.py',119),
  ('statement -> boolean','statement',1,'p_statement_relation','rpn_calc.py',123),
  ('statement -> DEF NAME = block','statement',4,'p_statement_fundef','rpn_calc.py',127),
  ('statement -> RUN NAME','statement',2,'p_statement_run','rpn_calc.py',130),
  ('statement -> IF ( boolean ) block','statement',5,'p_statement_cond','rpn_calc.py',134),
  ('statement -> WHILE ( boolean ) block','statement',5,'p_statement_while','rpn_calc.py',140),
  ('statement -> FOR ( statement ; boolean ; statement ) block','statement',9,'p_statement_for','rpn_calc.py',145),
  ('boolean -> relation','boolean',1,'p_boolean','rpn_calc.py',153),
  ('boolean -> BOOLEAN','boolean',1,'p_boolean','rpn_calc.py',154),
  ('boolean -> boolean logicop boolean','boolean',3,'p_boolean','rpn_calc.py',155),
  ('logicop -> AND','logicop',1,'p_logicop','rpn_calc.py',159),
  ('logicop -> OR','logicop',1,'p_logicop','rpn_calc.py',160),
  ('logicop -> NAND','logicop',1,'p_logicop','rpn_calc.py',161),
  ('logicop -> NOR','logicop',1,'p_logicop','rpn_calc.py',162),
  ('relation -> expr RELOP expr','relation',3,'p_relation','rpn_calc.py',167),
  ('statement -> NAME = expr','statement',3,'p_statement_assignment','rpn_calc.py',171),
  ('expr -> name','expr',1,'p_expr','rpn_calc.py',177),
  ('expr -> number','expr',1,'p_expr','rpn_calc.py',178),
  ('expr -> name expr','expr',2,'p_expr','rpn_calc.py',179),
  ('expr -> number expr','expr',2,'p_expr','rpn_calc.py',180),
  ('expr -> sinop expr','expr',2,'p_expr','rpn_calc.py',181),
  ('expr -> binop expr','expr',2,'p_expr','rpn_calc.py',182),
  ('expr -> sinop','expr',1,'p_expr','rpn_calc.py',183),
  ('expr -> binop','expr',1,'p_expr','rpn_calc.py',184),
  ('sinop -> FUNCTION','sinop',1,'p_sinop','rpn_calc.py',191),
  ('binop -> BINOP','binop',1,'p_binop','rpn_calc.py',195),
  ('name -> NAME','name',1,'p_var','rpn_calc.py',199),
  ('number -> INTEGER','number',1,'p_number','rpn_calc.py',203),
  ('number -> DOUBLE','number',1,'p_number','rpn_calc.py',204),
]
