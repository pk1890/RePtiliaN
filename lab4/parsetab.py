
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftORNORleftANDNANDNAME FUNCTION RELOP BINOP IF WHILE FOR DEF RUN PRINT AND OR NOR NAND INT FLOAT STRING BOOLEAN INT_T FLOAT_T STRING_T program : statement ';' program\n               | block program\n               | statement ';'\n               | blockblock : '{' program '}'statement : exprstatement : PRINT rvaluestatement : booleanstatement : DEF NAME '(' arglist ')' block\n                 | DEF NAME '(' ')' blockarglist : arg ',' arglist\n               | arg\n    arg : typename NAME\n    statement : callcall : RUN NAME '('  ')'\n                 | RUN NAME '(' rvallist ')'rvallist : rvalue ',' rvallist\n                | rvaluestatement : IF '(' boolean ')' block statement : WHILE '(' boolean ')' block statement : FOR '(' statement ';' boolean ';' statement ')' block boolean : relation\n               | BOOLEAN\n               | boolean logicop booleanlogicop : AND \n               | OR\n               | NAND\n               | NORrelation : rvalue RELOP rvaluetypename : INT\n                | FLOAT\n                | STRINGrvalue : expr\n              | boolean\n              | number\n              | block\n              | callstatement : typename NAME '=' rvaluestatement : NAME '=' rvalueexpr : name\n            | number\n            | string\n            | name expr\n            | number expr\n            | string expr\n            | sinop expr\n            | binop expr\n            | sinop \n            | binop sinop : FUNCTIONbinop : BINOPname : NAMEstring : STRING_Tinteger : INT_Tfloat : FLOAT_Tnumber : float \n              | integer"
    
_lr_action_items = {'PRINT':([0,3,15,34,53,72,96,],[5,5,5,5,5,-5,5,]),'DEF':([0,3,15,34,53,72,96,],[8,8,8,8,8,-5,8,]),'IF':([0,3,15,34,53,72,96,],[11,11,11,11,11,-5,11,]),'WHILE':([0,3,15,34,53,72,96,],[12,12,12,12,12,-5,12,]),'FOR':([0,3,15,34,53,72,96,],[13,13,13,13,13,-5,13,]),'NAME':([0,3,5,8,9,14,15,16,17,18,19,20,23,24,25,26,27,28,29,30,31,32,33,34,39,42,43,44,45,46,47,48,50,51,52,53,57,71,72,73,77,80,93,96,],[9,9,42,49,-52,54,9,42,42,42,42,42,62,-30,-31,-32,-56,-57,-53,-50,-51,-55,-54,9,42,-52,42,42,-25,-26,-27,-28,42,42,42,9,42,42,-5,42,88,42,42,9,]),'{':([0,3,5,15,34,43,44,45,46,47,48,50,51,52,53,71,72,73,75,78,79,80,85,93,96,99,],[15,15,15,15,15,15,15,-25,-26,-27,-28,15,15,15,15,15,-5,15,15,15,15,15,15,15,15,15,]),'BOOLEAN':([0,3,5,15,34,43,44,45,46,47,48,50,51,52,53,71,72,73,80,93,96,],[22,22,22,22,22,22,22,-25,-26,-27,-28,22,22,22,22,22,-5,22,22,22,22,]),'RUN':([0,3,5,15,34,43,44,45,46,47,48,50,51,52,53,71,72,73,80,93,96,],[23,23,23,23,23,23,23,-25,-26,-27,-28,23,23,23,23,23,-5,23,23,23,23,]),'INT':([0,3,15,34,53,66,72,87,96,],[24,24,24,24,24,24,-5,24,24,]),'FLOAT':([0,3,15,34,53,66,72,87,96,],[25,25,25,25,25,25,-5,25,25,]),'STRING':([0,3,15,34,53,66,72,87,96,],[26,26,26,26,26,26,-5,26,26,]),'STRING_T':([0,3,5,9,15,16,17,18,19,20,27,28,29,30,31,32,33,34,39,42,43,44,45,46,47,48,50,51,52,53,57,71,72,73,80,93,96,],[29,29,29,-52,29,29,29,29,29,29,-56,-57,-53,-50,-51,-55,-54,29,29,-52,29,29,-25,-26,-27,-28,29,29,29,29,29,29,-5,29,29,29,29,]),'FUNCTION':([0,3,5,9,15,16,17,18,19,20,27,28,29,30,31,32,33,34,39,42,43,44,45,46,47,48,50,51,52,53,57,71,72,73,80,93,96,],[30,30,30,-52,30,30,30,30,30,30,-56,-57,-53,-50,-51,-55,-54,30,30,-52,30,30,-25,-26,-27,-28,30,30,30,30,30,30,-5,30,30,30,30,]),'BINOP':([0,3,5,9,15,16,17,18,19,20,27,28,29,30,31,32,33,34,39,42,43,44,45,46,47,48,50,51,52,53,57,71,72,73,80,93,96,],[31,31,31,-52,31,31,31,31,31,31,-56,-57,-53,-50,-51,-55,-54,31,31,-52,31,31,-25,-26,-27,-28,31,31,31,31,31,31,-5,31,31,31,31,]),'FLOAT_T':([0,3,5,9,15,16,17,18,19,20,27,28,29,30,31,32,33,34,39,42,43,44,45,46,47,48,50,51,52,53,57,71,72,73,80,93,96,],[32,32,32,-52,32,32,32,32,32,32,-56,-57,-53,-50,-51,-55,-54,32,32,-52,32,32,-25,-26,-27,-28,32,32,32,32,32,32,-5,32,32,32,32,]),'INT_T':([0,3,5,9,15,16,17,18,19,20,27,28,29,30,31,32,33,34,39,42,43,44,45,46,47,48,50,51,52,53,57,71,72,73,80,93,96,],[33,33,33,-52,33,33,33,33,33,33,-56,-57,-53,-50,-51,-55,-54,33,33,-52,33,33,-25,-26,-27,-28,33,33,33,33,33,33,-5,33,33,33,33,]),'$end':([1,3,34,35,63,72,],[0,-4,-3,-2,-1,-5,]),';':([2,4,7,9,10,16,17,18,19,20,21,22,27,28,29,30,31,32,33,36,37,38,39,40,41,42,56,57,58,59,60,61,64,65,67,70,72,81,82,86,89,90,91,92,94,100,],[34,-6,-8,-52,-14,-40,-41,-42,-48,-49,-22,-23,-56,-57,-53,-50,-51,-55,-54,-7,-33,-34,-35,-36,-37,-52,-43,-41,-44,-45,-46,-47,-29,-24,-39,80,-5,-38,-15,-10,-19,-20,96,-16,-9,-21,]),'}':([3,34,35,55,63,72,],[-4,-3,-2,72,-1,-5,]),'RELOP':([3,4,6,7,9,10,16,17,18,19,20,21,22,27,28,29,30,31,32,33,36,37,38,39,40,41,42,56,57,58,59,60,61,64,65,67,68,69,72,81,82,84,91,92,],[-36,-33,43,-34,-52,-37,-40,-35,-42,-48,-49,-22,-23,-56,-57,-53,-50,-51,-55,-54,43,-33,-34,-35,-36,-37,-52,-43,-41,-44,-45,-46,-47,43,-24,43,-34,-34,-5,43,-15,43,-34,-16,]),')':([4,7,9,10,16,17,18,19,20,21,22,27,28,29,30,31,32,33,36,37,38,39,40,41,42,56,57,58,59,60,61,64,65,66,67,68,69,72,73,74,76,81,82,83,84,86,88,89,90,92,94,95,97,98,100,],[-6,-8,-52,-14,-40,-41,-42,-48,-49,-22,-23,-56,-57,-53,-50,-51,-55,-54,-7,-33,-34,-35,-36,-37,-52,-43,-41,-44,-45,-46,-47,-29,-24,75,-39,78,79,-5,82,85,-12,-38,-15,92,-18,-10,-13,-19,-20,-16,-9,-11,-17,99,-21,]),'AND':([7,16,18,19,20,21,22,27,28,29,30,31,32,33,37,38,39,40,41,42,56,57,58,59,60,61,64,65,68,69,72,82,91,92,],[45,-40,-42,-48,-49,-22,-23,-56,-57,-53,-50,-51,-55,-54,-33,45,-35,-36,-37,-52,-43,-41,-44,-45,-46,-47,-29,45,45,45,-5,-15,45,-16,]),'OR':([7,16,18,19,20,21,22,27,28,29,30,31,32,33,37,38,39,40,41,42,56,57,58,59,60,61,64,65,68,69,72,82,91,92,],[46,-40,-42,-48,-49,-22,-23,-56,-57,-53,-50,-51,-55,-54,-33,46,-35,-36,-37,-52,-43,-41,-44,-45,-46,-47,-29,46,46,46,-5,-15,46,-16,]),'NAND':([7,16,18,19,20,21,22,27,28,29,30,31,32,33,37,38,39,40,41,42,56,57,58,59,60,61,64,65,68,69,72,82,91,92,],[47,-40,-42,-48,-49,-22,-23,-56,-57,-53,-50,-51,-55,-54,-33,47,-35,-36,-37,-52,-43,-41,-44,-45,-46,-47,-29,47,47,47,-5,-15,47,-16,]),'NOR':([7,16,18,19,20,21,22,27,28,29,30,31,32,33,37,38,39,40,41,42,56,57,58,59,60,61,64,65,68,69,72,82,91,92,],[48,-40,-42,-48,-49,-22,-23,-56,-57,-53,-50,-51,-55,-54,-33,48,-35,-36,-37,-52,-43,-41,-44,-45,-46,-47,-29,48,48,48,-5,-15,48,-16,]),'=':([9,54,],[50,71,]),'(':([11,12,13,49,62,],[51,52,53,66,73,]),',':([16,18,19,20,21,22,27,28,29,30,31,32,33,37,38,39,40,41,42,56,57,58,59,60,61,64,65,72,76,82,84,88,92,],[-40,-42,-48,-49,-22,-23,-56,-57,-53,-50,-51,-55,-54,-33,-34,-35,-36,-37,-52,-43,-41,-44,-45,-46,-47,-29,-24,-5,87,-15,93,-13,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,3,15,34,],[1,35,55,63,]),'statement':([0,3,15,34,53,96,],[2,2,2,2,70,98,]),'block':([0,3,5,15,34,43,44,50,51,52,53,71,73,75,78,79,80,85,93,96,99,],[3,3,40,3,3,40,40,40,40,40,40,40,40,86,89,90,40,94,40,40,100,]),'expr':([0,3,5,15,16,17,18,19,20,34,39,43,44,50,51,52,53,57,71,73,80,93,96,],[4,4,37,4,56,58,59,60,61,4,58,37,37,37,37,37,4,58,37,37,37,37,4,]),'rvalue':([0,3,5,15,34,43,44,50,51,52,53,71,73,80,93,96,],[6,6,36,6,6,64,6,67,6,6,6,81,84,6,84,6,]),'boolean':([0,3,5,15,34,43,44,50,51,52,53,71,73,80,93,96,],[7,7,38,7,7,38,65,38,68,69,7,38,38,91,38,7,]),'call':([0,3,5,15,34,43,44,50,51,52,53,71,73,80,93,96,],[10,10,41,10,10,41,41,41,41,41,10,41,41,41,41,10,]),'typename':([0,3,15,34,53,66,87,96,],[14,14,14,14,14,77,77,14,]),'name':([0,3,5,15,16,17,18,19,20,34,39,43,44,50,51,52,53,57,71,73,80,93,96,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'number':([0,3,5,15,16,17,18,19,20,34,39,43,44,50,51,52,53,57,71,73,80,93,96,],[17,17,39,17,57,57,57,57,57,17,57,39,39,39,39,39,17,57,39,39,39,39,17,]),'string':([0,3,5,15,16,17,18,19,20,34,39,43,44,50,51,52,53,57,71,73,80,93,96,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'sinop':([0,3,5,15,16,17,18,19,20,34,39,43,44,50,51,52,53,57,71,73,80,93,96,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'binop':([0,3,5,15,16,17,18,19,20,34,39,43,44,50,51,52,53,57,71,73,80,93,96,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'relation':([0,3,5,15,34,43,44,50,51,52,53,71,73,80,93,96,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'float':([0,3,5,15,16,17,18,19,20,34,39,43,44,50,51,52,53,57,71,73,80,93,96,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'integer':([0,3,5,15,16,17,18,19,20,34,39,43,44,50,51,52,53,57,71,73,80,93,96,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'logicop':([7,38,65,68,69,91,],[44,44,44,44,44,44,]),'arglist':([66,87,],[74,95,]),'arg':([66,87,],[76,76,]),'rvallist':([73,93,],[83,97,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement ; program','program',3,'p_program','rpn_calc.py',112),
  ('program -> block program','program',2,'p_program','rpn_calc.py',113),
  ('program -> statement ;','program',2,'p_program','rpn_calc.py',114),
  ('program -> block','program',1,'p_program','rpn_calc.py',115),
  ('block -> { program }','block',3,'p_block','rpn_calc.py',125),
  ('statement -> expr','statement',1,'p_statement_expr','rpn_calc.py',133),
  ('statement -> PRINT rvalue','statement',2,'p_statement_print','rpn_calc.py',137),
  ('statement -> boolean','statement',1,'p_statement_relation','rpn_calc.py',141),
  ('statement -> DEF NAME ( arglist ) block','statement',6,'p_statement_fundef','rpn_calc.py',145),
  ('statement -> DEF NAME ( ) block','statement',5,'p_statement_fundef','rpn_calc.py',146),
  ('arglist -> arg , arglist','arglist',3,'p_arglist','rpn_calc.py',153),
  ('arglist -> arg','arglist',1,'p_arglist','rpn_calc.py',154),
  ('arg -> typename NAME','arg',2,'p_arg','rpn_calc.py',164),
  ('statement -> call','statement',1,'p_statement_call','rpn_calc.py',169),
  ('call -> RUN NAME ( )','call',4,'p_call','rpn_calc.py',173),
  ('call -> RUN NAME ( rvallist )','call',5,'p_call','rpn_calc.py',174),
  ('rvallist -> rvalue , rvallist','rvallist',3,'p_rvallist','rpn_calc.py',183),
  ('rvallist -> rvalue','rvallist',1,'p_rvallist','rpn_calc.py',184),
  ('statement -> IF ( boolean ) block','statement',5,'p_statement_cond','rpn_calc.py',194),
  ('statement -> WHILE ( boolean ) block','statement',5,'p_statement_while','rpn_calc.py',200),
  ('statement -> FOR ( statement ; boolean ; statement ) block','statement',9,'p_statement_for','rpn_calc.py',205),
  ('boolean -> relation','boolean',1,'p_boolean','rpn_calc.py',213),
  ('boolean -> BOOLEAN','boolean',1,'p_boolean','rpn_calc.py',214),
  ('boolean -> boolean logicop boolean','boolean',3,'p_boolean','rpn_calc.py',215),
  ('logicop -> AND','logicop',1,'p_logicop','rpn_calc.py',219),
  ('logicop -> OR','logicop',1,'p_logicop','rpn_calc.py',220),
  ('logicop -> NAND','logicop',1,'p_logicop','rpn_calc.py',221),
  ('logicop -> NOR','logicop',1,'p_logicop','rpn_calc.py',222),
  ('relation -> rvalue RELOP rvalue','relation',3,'p_relation','rpn_calc.py',227),
  ('typename -> INT','typename',1,'p_typename','rpn_calc.py',231),
  ('typename -> FLOAT','typename',1,'p_typename','rpn_calc.py',232),
  ('typename -> STRING','typename',1,'p_typename','rpn_calc.py',233),
  ('rvalue -> expr','rvalue',1,'p_rvalue','rpn_calc.py',237),
  ('rvalue -> boolean','rvalue',1,'p_rvalue','rpn_calc.py',238),
  ('rvalue -> number','rvalue',1,'p_rvalue','rpn_calc.py',239),
  ('rvalue -> block','rvalue',1,'p_rvalue','rpn_calc.py',240),
  ('rvalue -> call','rvalue',1,'p_rvalue','rpn_calc.py',241),
  ('statement -> typename NAME = rvalue','statement',4,'p_declaration','rpn_calc.py',245),
  ('statement -> NAME = rvalue','statement',3,'p_statement_assignment','rpn_calc.py',249),
  ('expr -> name','expr',1,'p_expr','rpn_calc.py',257),
  ('expr -> number','expr',1,'p_expr','rpn_calc.py',258),
  ('expr -> string','expr',1,'p_expr','rpn_calc.py',259),
  ('expr -> name expr','expr',2,'p_expr','rpn_calc.py',260),
  ('expr -> number expr','expr',2,'p_expr','rpn_calc.py',261),
  ('expr -> string expr','expr',2,'p_expr','rpn_calc.py',262),
  ('expr -> sinop expr','expr',2,'p_expr','rpn_calc.py',263),
  ('expr -> binop expr','expr',2,'p_expr','rpn_calc.py',264),
  ('expr -> sinop','expr',1,'p_expr','rpn_calc.py',265),
  ('expr -> binop','expr',1,'p_expr','rpn_calc.py',266),
  ('sinop -> FUNCTION','sinop',1,'p_sinop','rpn_calc.py',273),
  ('binop -> BINOP','binop',1,'p_binop','rpn_calc.py',277),
  ('name -> NAME','name',1,'p_var','rpn_calc.py',281),
  ('string -> STRING_T','string',1,'p_string','rpn_calc.py',285),
  ('integer -> INT_T','integer',1,'p_integer','rpn_calc.py',289),
  ('float -> FLOAT_T','float',1,'p_float','rpn_calc.py',293),
  ('number -> float','number',1,'p_number','rpn_calc.py',297),
  ('number -> integer','number',1,'p_number','rpn_calc.py',298),
]
